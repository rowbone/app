
from:http://www.cnblogs.com/whitewolf/p/angular-services.html

1、constant：设置的值不能被改变
	app.constant('options', {
		options1: true,
		options2: 'str'
	});

	app.constant('name', value);

2、value：在赋值后还可以被改变。它也被常用于directive配置信息。Value service只会保留values，我们不会在service中计算其值。


3、factory：返回一个object
	app.factory('foo', ['$filter', function($filter) {
		var variablePrivate = 'private';

		function getPrivate = function() {
			return variablePrivate;
		}

		return {
			variable: 'public',
			getPrivate: getPrivate
		}
	}])

4、service：接收一个构造函数，第一次使用service的时候，Angular会调用 new Foo()来初始化这个对象
	app.service('foo', ['$filter', 
		function($filter) {
			var variablePrivate = 'private';

			this.variable = 'public';
			this.getPrivate = function() {
				return variablePrivate;
			}
		}
	]);
	等价于：
	app.factory('foo2', ['$filter', 
		function($filter){
			return new Foobar();
		}
	]);

	function Foobar() {
		var variablePrivate = 'private';

		this.variable = 'public';
		this.getPrivate = function() {
			return variablePrivate;
		}
	}

5、provider：provider带有一个$get 方法，其返回值将会被注入到其他应用组件。
	app.provider('foo', function() {
		var variablePrivate = 'private';

		return {
			setPrivate: function(newVal) {
				variablePrivate = newVal;
			},
			$get: function() {
				function getPrivate = function() {
					return variablePrivate;
				}

				return {
					variable: 'public',
					getPrivate: getPrivate
				}
			}
		}
	});

	app.config(function(fooProvider) {
		fooProvider.setPrivate('New value from config.')
	});